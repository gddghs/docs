
=========================vim 使用基础======================

0、模式切换：
  默认进入是“正常模式”，按i或a切换到“插入模式”，按Esc退回到“正常模式”。

 “正常模式”按冒号“:”进入“命令模式”

1、设置编码: 命令模式下set encoding=utf-8
   也可以修改vimrc文件，就不用每次都执行上面命令了.


2、光标的移动
这里说的光标移动是指在正常模式下光标的移动。
最简单是方向键，它即使在插入模式下仍可使用，但不是最方便。
h 在当前行向左移动一个字符，或者Backspace。
j 移动到下一行，或者Enter。
k 移动到上一行，或者- 号。
l 在当前行向右移动一个字符，或者空格键Space。

Ctrl +f 向前滚动一页，或者PageDown。
Ctrl +b 向后滚动一页，或者PageUp。
0(零) 移至行首（包含空白字符，如缩进的空格），或是Home 键。
$ 移至行尾， 或End 键。
^ 移到行首第一个非空白字符。
G 移动到文档末尾，或者
gg 移动到文档开头。
w 移动到下一word的开头。
b 移动到上一word的开头。
e 移动到本word或者下个word的末尾。
ge 移动到上个word的末尾。
大写的W B E 和w b e 效果一样但会忽略像. - 等特殊字符。
中文因为是连在一起的，所以如果没有空格或者数字、英文标点的话，将视为一个word。
( 光标移至句首，句子是以. ? ! 标点来判断的。
) 光标移至句尾
{ 光标移至段落的开头，段落是以空白行来判断的。
} 光标移至段落的结尾
H 将光标移至屏幕顶第一个非空白字符。
M 光标移至屏幕中间第一个非空白字符。
L 光标移至屏幕底第一个非空白字符。这和PageDown，PageUp 不一样，内文内容并未动，只是光标在动而已。
:n 将光标定位到第n行。
n| 将光标移动到本行第n个字符。


3、打开和退出
:e test.txt 打开test.txt文件进行编辑,文件不存在则创建。
:w 保存不退出 
:q 不保存退出
:wq 保存然后退出。按ZZ(注意Z是大写的，并且不是在命令模式)或者:x效果是一样的。
:q! 放弃所有修改强制退出，按:q不能退出时就试试这个吧。


4、编辑
x  删除当前光标下的字符
dw 删除光标之后的单词剩余部分。
d$ 删除光标之后的该行剩余部分。
dd 删除当前行。

c  功能和d相同，区别在于完成删除操作后进入INSERT MODE
cc 也是删除当前行，然后进入INSERT MODE


5、查找指令：
/xxx 往下查找
?xxx 往上 
n    下一个
:set hls 打开高亮
:set nohls 关闭高亮


6、替换
vi/vim 中可以使用:s命令来替换字符串.
:%s/four/4/g 用4替换four

“%” 范围前缀表示在所有行中执行替换。最后的 “g”标记表示替换行中的所有匹配点。如果仅仅对当前行进行操作，那么只要去掉%即可.

如果你有一个象 “thirtyfour”
这样的单词，上面的命令会出错。这种情况下，这个单词会被替换成“thirty4”。

要解决这个问题，用 “\<” 来指定匹配单词开头：:%s/\<four/4/g 
显然，这样在处理 “fourty” 的时候还是会出错。用 “\>” 来解决这个问题:
%s/\<four\>/4/g   

如果你在编码，你可能只想替换注释中的
“four”，而保留代码中的。由于这很难指定，可以在替换命令中加一个 “c” 标记，这样，Vim 会在每次替换前提示你：
        :%s/\/4/gc



7、ll命令结果说明

drwxr-xr-x   2 root root 48 2013-11-27 16:34 test/

第一个栏位，表示文件的属性。Linux的文件基本上分为三个属性：可读（r），可写（w），可执行（x）。

这里有十个格子可以添（具体程序实现时，实际上是十个bit位）。
  第一个字母表示文件类型,

        ”-”,普通文件.

        ”d”目录,字母”d”,是dirtectory(目录)的缩写.

        “l”符号链接。请注意,一个目录或者说一个文件夹是一个特殊文件,这个特殊文件存放的是其他文件和文件夹的相关信息.

        “b”块设备文件。

        “c”字符设备文件。

紧接着的3*3个字符分3组，各指示此文件的读、写、执行权限，对于owner、group、others而言。
因为Linux是多用户多任务系统，所以一个文件可能同时被许多人使用，所以我们一定要设好每个文件的权限，其文件的权限位置排列顺序是（以-rwxr-xr-x为例）：　　  
   rwx(Owner)r-x(Group)r-x(Other)　　     
这个例子表示的权限是：使用者自己可读，可写，可执行；同一组的用户可读，不可写，可执行；其它用户可读，不可写，可执行。
另外，有一些程序属性的执行部分不是X,而是S,这表示执行这个程序的使用者，临时可以有和拥有者一样权力的身份来执行该程序。一般出现在系统管理之类的指令或程序，让使用者执行时，拥有root身份。　
第二个栏位，表示文件个数。如果是文件的话，那这个数目自然是1了，如果是目录的话，那它的数目就是该目录中的文件个数了。

第三个栏位，表示该文件或目录的拥有者。若使用者目前处于自己的Home,那这一栏大概都是它的账号名称。

第四个栏位，表示所属的组（group）。每一个使用者都可以拥有一个以上的组，不过大部分的使用者应该都只属于一个组，只有当系统管理员希望给予某使用者特殊权限时，才可能会给他另一个组。
第五栏位，表示文件大小。文件大小用byte来表示，而空目录一般都是1024byte，当然可以用其它参数使文件显示的单位不同，如使用ls –k就是用kb莱显示一个文件的大小单位，不过一般我们还是以byte为主。　　

第六个栏位，表示最后一次修改时间。以“月，日，时间”的格式表示，如Aug 15 5:46表示8月15日早上5:46分。

第七个栏位，表示文件名。我们可以用ls –a显示隐藏的文件名。

 
修改文件权限用，chmod命令
